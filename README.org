* Kandidatprojekt grupp 6
** Användning av git:
*** Allmän användning av git:
+ Håll commits korta, kan du inte beskriva dem i en rad är de antagligen för stora.
+ Jobba med branches, andra vill inte se din kod innan den är klar. (Vill någon verkligen se ens kod innan den är klar så får de visa den manuellt.)
+ Skapa branches för alla nya features.
+ Allt som ska in i master är färdig kod.

[[https://git-scm.com/book/en/v2][Hemsida med mer info om git]]
Lång men utförlig.
*** Branching:
[[https://www.atlassian.com/git/tutorials/using-branches][Tutorial om branches]]
Skapa branch
#+BEGIN_SRC bash
git branch NAMN-PÅ-BRANCH
#+END_SRC

Byt branch
#+BEGIN_SRC bash
git checkout NAMN-PÅ-BRANCH
#+END_SRC

Pusha första gången från en branch
#+BEGIN_SRC bash
git push -u origin NAMN-PÅ-BRANCH
#+END_SRC

Kontrollera vilka branches som finns och viken man står i:
#+BEGIN_SRC bash
git branch
#+END_SRC

Merga branches med master:
Gå in på projektet i gitlab, klicka på branches, klicka på merge request, skapa och vänta.

Hämta nya saker från master (förutsatt att du redan står i branchen):
#+BEGIN_SRC bash
git fetch
git merge origin master
#+END_SRC

Alternativt:
#+BEGIN_SRC bash
git pull
#+END_SRC

*** Allmänna git-commandon
Lägg till filer för som ska committas
#+BEGIN_SRC bash
git add FILNAMN
#+END_SRC

Committa filer, skapar en commit(en punkt som man alltid kan gå tillbaka till) lokalt.
#+BEGIN_SRC bash
git commit -m "MEDDELANDE FÖR ATT BESKRIVA COMMITTEN"
#+END_SRC

Pusha filer, laddar upp dina ändringar till servern.
#+BEGIN_SRC bash
git push origin NAMN-PÅ-BRANCH
#+END_SRC

Se status för vilka filer som är committade, addade och vilka som inte är det. Visar också vilken branch du står på.
#+BEGIN_SRC bash
git status
#+END_SRC

** Första gången:
*** Frivilligt: Fixa ssh-nyckel
Gör att man inte behöver skriva in epost och lösenord varje gång man pushar.
[[https://gitlab.liu.se/help/ssh/README#generating-a-new-ssh-key-pair][Skapa och lägg till ssh-nyckel]]

Kör ett av följande kommandon:
*** Klona repo
Detta om ni har fixat med ssh nyckel
#+BEGIN_SRC bash
  git clone git@gitlab.liu.se:isaal360/tddd83-grupp-6.git
#+END_SRC

Detta om ni inte har gjort det
#+BEGIN_SRC bash
  git clone https://gitlab.liu.se/isaal360/tddd83-grupp-6.git
#+END_SRC

*** Allmänt setup
Navigera in i mappen med kommandot
#+BEGIN_SRC bash
  cd tddd83-grupp-6
#+END_SRC

Skapa en venv med kommandot

#+BEGIN_SRC bash
  python3 -m venv venv
#+END_SRC

Gå in i venv
(Ser annorlunda ut i windows. [[https://docs.python.org/3/library/venv.html][guide för windows]])
#+BEGIN_SRC bash
  source venv/bin/activate
#+END_SRC

Skaffa alla requirements
#+BEGIN_SRC bash
pip install -r requirements.txt
#+END_SRC

** Varje gång:

Navigera till huvudmappen i projektet och kör
(Ser annorlunda ut i windows. [[https://docs.python.org/3/library/venv.html][guide för windows]])
#+BEGIN_SRC bash
source venv/bin/activate
#+END_SRC
   
